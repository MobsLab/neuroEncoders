#!/bin/bash
# Absolute path to this script, e.g. /home/user/bin/foo.sh
SCRIPT=$(readlink -f "$0")
# Absolute path this script is in, thus /home/user/bin
SCRIPTPATH=$(dirname "$SCRIPT")
cd $SCRIPTPATH
args=("$@")

usage="./neuroEncoder full|fromUnits [-f | --filter] [-g | --gpu] [-p | --path <path/to/xml>] [-t | --target <nameOfTsdTarget>] [-w | --window <windowLength>]"

# Parsing arguments
device=cpu
target=\"pos\"
encoderType=none
window=0.036
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -v|--version)
    VERSION="$2"
    shift # past argument
    shift # past value
    ;;
    -f|--filter)
    FILTERTYPE="internal"
    shift # past argument
    ;;
    full)
	encoderType=full
	shift
	;;
	fromUnits)
	encoderType=fromUnits
	shift
	;;
	-g|--gpu)
	device=gpu
	shift
	;;
	-p|--path)
	xml_path="$2"
	shift
	shift
	;;
	-t|--target)
	target=\"$2\"
	shift
	shift
	;;
	-w|--window)
	window=$2
	shift
	shift
	;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [[ $encoderType == none ]]; then
	echo "usage : $usage"
	exit 1
elif [[ $encoderType == fromUnits ]]; then
	target=\"pos\"
fi


# Header
echo
echo
COLUMNS=$(tput cols) 
title="|| neuroEncoder by MOBS ||" 
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
title="march 2020" 
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
title="email : t.balenbois@gmail.com" 
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"

echo
echo


# Depending on version called, loads correct python script
username=$USER
prjpath="/$HOME/Dropbox/Kteam/PrgMatlab/OnlinePlaceDecoding"

script_path_from_units="encodeByUnit.py"
script_path_full="fullEncoder.py"
script_path_print_full="./fullEncoder/printResults.py"

# Input and help
echo Hello dear MOBSter ! Welcome to the encoder.

if [[ $xml_path == "" ]]; then
	echo What is the full path to your Mouse''s xml, as /path/to/file.xml ?
	read xml_path
	if [[ $xml_path == "test" ]]; then
		# xml_path="/home/$username/Documents/dataset/test_set/ERC-Mouse-743-01062018-Hab.xml"
		echo test set not active at the moment, sorry
		echo type 'help' to get a description of what the encoder needs.
		exit 0
	elif [[ $xml_path == "help" ]]; then
		echo
		echo What the encoder needs is fourfold :
		echo
		echo --- First, the .clu files.
		echo --- Second, the .spk and .res files.
		echo --- Third, the behavRessources.mat containing variables Xtsd, Ytsd, and Vtsd.
		echo --- Fourth, the xml file of this recording, the path of which you should give me. Other files must be in the same directory.
		echo
		echo If you just want to test the encoder on a test set, just type test !
		echo Good luck !
		echo
		exit 0
	fi
fi


if [ "$FILTERTYPE" = "internal" ]
then
	echo filtering data ourselves
else
	echo using external filter
	FILTERTYPE="external"
fi


if [[ `echo $xml_path | cut -c ${#xml_path}` == \' ]]; then
	temp=${#xml_path}
	temp=`expr ${#xml_path} - 1`
	xml_path=`echo $xml_path | cut -c-$temp`
fi
if [[ `echo $xml_path | cut -c 1` == \' ]]; then
	xml_path=`echo $xml_path | cut -c2-${#xml_path}`
fi
path=$(dirname "${xml_path}")
path="$path/"
jsonPath="${xml_path::-3}json"


env/bin/python3 $script_path_full $encoderType $xml_path -d $device -f -w $window

echo
echo
echo Encoding over.
